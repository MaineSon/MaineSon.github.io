[{"authors":["admin"],"categories":null,"content":"Yarmaine Pierson is a junior data scientist. She recently completed the Chromebook Data Science program.She plans to broaden her education in data science as well as cyber security.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"598b63dd58b43bce02403646f240cd3c","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"author","summary":"Yarmaine Pierson is a junior data scientist. She recently completed the Chromebook Data Science program.She plans to broaden her education in data science as well as cyber security.","tags":null,"title":"Yarmaine Pierson","type":"author"},{"authors":null,"categories":null,"content":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.main]] menu links to it in the config.toml.\n","date":1536451200,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1536451200,"objectID":"c3224f3a64174f08aaf31e1f1d16ffd3","permalink":"/tutorial/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/tutorial/","section":"tutorial","summary":"This feature can be used for publishing content such as:\n Project or software documentation Online courses Tutorials  The parent folder may be renamed, for example, to docs for project documentation or course for creating an online course.\nTo disable this feature, either delete the parent folder, or set draft = true in the front matter of all its pages.\nAfter renaming or deleting the parent folder, you may wish to update any [[menu.","tags":null,"title":"Overview","type":"docs"},{"authors":[],"categories":null,"content":" Click on the **Slides** button above to view the built-in slides feature.   Slides can be added in a few ways:\n Create slides using Academic\u0026rsquo;s Slides feature and link using url_slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"96344c08df50a1b693cc40432115cbe3","permalink":"/talk/example/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example/","section":"talk","summary":"An example talk using Academic's Markdown slides feature.","tags":[],"title":"Example Talk","type":"talk"},{"authors":null,"categories":["data analysis"],"content":" candid1 \u0026lt;- userTimeline(\u0026quot;PeteButtigieg\u0026quot;, n=3200, includeRts=T) candid2 \u0026lt;- userTimeline(\u0026quot;BernieSanders\u0026quot;, n=3200, includeRts=T) candid3 \u0026lt;- userTimeline(\u0026quot;KamalaHarris\u0026quot;, n=3200, includeRts=T) candid4 \u0026lt;- userTimeline(\u0026quot;CoryBooker\u0026quot;, n=3200, includeRts=T) str(candid1)\ndf.candid1 \u0026lt;- twListToDF(candid1) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid2 \u0026lt;- twListToDF(candid2) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid3 \u0026lt;- twListToDF(candid3) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid4 \u0026lt;- twListToDF(candid4) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) all_candidates \u0026lt;- bind_rows(df.candid1, df.candid2, df.candid3, df.candid4) all_candidates %\u0026gt;% group_by(screenName) %\u0026gt;% count() ggplot(all_candidates, aes(created)) + geom_histogram(fill = \u0026quot;cornflowerblue\u0026quot;,color = \u0026quot;grey\u0026quot;,position=\u0026quot;identity\u0026quot;, alpha=0.5) + labs(title=\u0026quot;Tweet activity over time\u0026quot;,x=\u0026quot;Candiates\u0026quot;, y = \u0026quot;Tweets\u0026quot;) + facet_wrap(~screenName, ncol =2) replace_reg \u0026lt;- \u0026quot;http[s]?://[A-Za-z\\\\d/\\\\.]+|\u0026amp;amp;|\u0026amp;lt;|\u0026amp;gt;\u0026quot; unnest_reg \u0026lt;- \u0026quot;([^A-Za-z_\\\\d#@\u0026#39;]|\u0026#39;(?![A-Za-z_\\\\d#@]))\u0026quot; tidy_tweets \u0026lt;- all_candidates %\u0026gt;% filter(!str_detect(text, \u0026quot;^RT\u0026quot;)) %\u0026gt;% mutate(text = str_replace_all(text, replace_reg, \u0026quot;\u0026quot;)) %\u0026gt;% mutate(id = row_number()) %\u0026gt;% unnest_tokens(word, text, token = \u0026quot;regex\u0026quot;, pattern = unnest_reg) %\u0026gt;% filter(!word %in% stop_words$word, str_detect(word, \u0026quot;[a-z]\u0026quot;)) frequency \u0026lt;- tidy_tweets %\u0026gt;% group_by(screenName,word) %\u0026gt;% summarise(n = n()) %\u0026gt;% arrange(-n) #arrange(-n) %\u0026gt;% #slice(1:10) frequency.spread \u0026lt;- frequency %\u0026gt;% select(screenName, word, n) %\u0026gt;% spread(screenName, n) %\u0026gt;% arrange(desc(BernieSanders), desc(KamalaHarris)) ggplot(frequency.spread, aes(BernieSanders, KamalaHarris)) + geom_jitter( alpha = 0.1, size = 2.5, width = 0.15, height = 0.15) + geom_text(aes(label = word), check_overlap = TRUE, vjust = 0) + scale_x_log10(labels = percent_format()) + scale_y_log10(labels = percent_format()) + geom_abline(color = \u0026quot;red\u0026quot;) top_5_my_candidate \u0026lt;- frequency %\u0026gt;% filter(screenName == \u0026quot;BernieSanders\u0026quot;) %\u0026gt;% arrange(-n) %\u0026gt;% slice(1:5) top_5_over_time \u0026lt;- tidy_tweets %\u0026gt;% filter(screenName == \u0026quot;BernieSanders\u0026quot;) %\u0026gt;% filter(word %in% top_5_my_candidate$word) %\u0026gt;% mutate(month = floor_date(created, unit= \u0026quot;month\u0026quot;)) %\u0026gt;% group_by(word, month) %\u0026gt;% summarise(n = n()) ggplot(top_5_over_time, aes(x=month, y=n, color= word)) + geom_line() ","date":1556668800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556668800,"objectID":"656b0efb1eb4d5a53b9ae2de245f5c66","permalink":"/project/democratic-twitter-analysis/","publishdate":"2019-05-01T00:00:00Z","relpermalink":"/project/democratic-twitter-analysis/","section":"project","summary":"candid1 \u0026lt;- userTimeline(\u0026quot;PeteButtigieg\u0026quot;, n=3200, includeRts=T) candid2 \u0026lt;- userTimeline(\u0026quot;BernieSanders\u0026quot;, n=3200, includeRts=T) candid3 \u0026lt;- userTimeline(\u0026quot;KamalaHarris\u0026quot;, n=3200, includeRts=T) candid4 \u0026lt;- userTimeline(\u0026quot;CoryBooker\u0026quot;, n=3200, includeRts=T) str(candid1)\ndf.candid1 \u0026lt;- twListToDF(candid1) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid2 \u0026lt;- twListToDF(candid2) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid3 \u0026lt;- twListToDF(candid3) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) df.candid4 \u0026lt;- twListToDF(candid4) %\u0026gt;% filter(isRetweet == FALSE) %\u0026gt;% select(text, favoriteCount, screenName,created, retweetCount) all_candidates \u0026lt;- bind_rows(df.","tags":["R"],"title":"Democratic Twitter Analysis","type":"project"},{"authors":null,"categories":["data analysis"],"content":" Import data champs \u0026lt;- read_csv(file = \u0026quot;data/championsdata.csv\u0026quot;) ## Parsed with column specification: ## cols( ## .default = col_double(), ## Team = col_character() ## ) ## See spec(...) for full column specifications. runners \u0026lt;- read_csv(file = \u0026quot;data/runnerupsdata.csv\u0026quot;) ## Parsed with column specification: ## cols( ## .default = col_double(), ## Team = col_character() ## ) ## See spec(...) for full column specifications. all_teams = bind_rows(\u0026quot;Champion\u0026quot; = champs, \u0026quot;Runner\u0026quot; = runners, .id = \u0026quot;rank\u0026quot;) champs \u0026lt;- champs %\u0026gt;% mutate(Team = ifelse(Team == \u0026quot;Warriorrs\u0026quot;,\u0026quot;Warriors\u0026quot;,Team)) %\u0026gt;% mutate(Team = ifelse(Team == \u0026quot;\u0026#39;Heat\u0026#39;\u0026quot;,\u0026quot;Heat\u0026quot;,Team)) %\u0026gt;% mutate(Win = as.factor(Win)) %\u0026gt;% mutate(Home = as.factor(Home)) runners \u0026lt;- runners %\u0026gt;% mutate(Win = as.factor(Win)) %\u0026gt;% mutate(Home = as.factor(Home)) champs$Team ## [1] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [6] \u0026quot;Lakers\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; ## [11] \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [16] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Sixers\u0026quot; \u0026quot;Sixers\u0026quot; ## [21] \u0026quot;Sixers\u0026quot; \u0026quot;Sixers\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; ## [26] \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Lakers\u0026quot; ## [31] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [36] \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; ## [41] \u0026quot;Celtics\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [46] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [51] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Pistons\u0026quot; ## [56] \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; ## [61] \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [66] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [71] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [76] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [81] \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; ## [86] \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; \u0026quot;Rockets\u0026quot; ## [91] \u0026quot;Rockets\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [96] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [101] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; ## [106] \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Bulls\u0026quot; \u0026quot;Spurs\u0026quot; ## [111] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Lakers\u0026quot; ## [116] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [121] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [126] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Spurs\u0026quot; ## [131] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; ## [136] \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; \u0026quot;Pistons\u0026quot; ## [141] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; ## [146] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; ## [151] \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; ## [156] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; ## [161] \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Celtics\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [166] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [171] \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; \u0026quot;Lakers\u0026quot; ## [176] \u0026quot;Mavericks\u0026quot; \u0026quot;Mavericks\u0026quot; \u0026quot;Mavericks\u0026quot; \u0026quot;Mavericks\u0026quot; \u0026quot;Mavericks\u0026quot; ## [181] \u0026quot;Mavericks\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; ## [186] \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; ## [191] \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Heat\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; ## [196] \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Spurs\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; ## [201] \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Cavaliers\u0026quot; ## [206] \u0026quot;Cavaliers\u0026quot; \u0026quot;Cavaliers\u0026quot; \u0026quot;Cavaliers\u0026quot; \u0026quot;Cavaliers\u0026quot; \u0026quot;Cavaliers\u0026quot; ## [211] \u0026quot;Cavaliers\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; ## [216] \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; \u0026quot;Warriors\u0026quot; champs %\u0026gt;% select(Team) %\u0026gt;% distinct() ## # A tibble: 11 x 1 ## Team ## \u0026lt;chr\u0026gt; ## 1 Lakers ## 2 Celtics ## 3 Sixers ## 4 Pistons ## 5 Bulls ## 6 Rockets ## 7 Spurs ## 8 Heat ## 9 Mavericks ## 10 Warriors ## 11 Cavaliers all_teams %\u0026gt;% group_by(Home) %\u0026gt;% summarize(mean=mean(PTS)) ## # A tibble: 2 x 2 ## Home mean ## \u0026lt;dbl\u0026gt; \u0026lt;dbl\u0026gt; ## 1 0 96.3 ## 2 1 101. ggplot(all_teams, aes(x=Year, y = TP)) + geom_bar(stat = \u0026quot;identity\u0026quot;)  ","date":1556668800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1556668800,"objectID":"3b9e304ae98d01221c0886b21cb74ae1","permalink":"/project/nba-analysis/","publishdate":"2019-05-01T00:00:00Z","relpermalink":"/project/nba-analysis/","section":"project","summary":"Import data champs \u0026lt;- read_csv(file = \u0026quot;data/championsdata.csv\u0026quot;) ## Parsed with column specification: ## cols( ## .default = col_double(), ## Team = col_character() ## ) ## See spec(...) for full column specifications. runners \u0026lt;- read_csv(file = \u0026quot;data/runnerupsdata.csv\u0026quot;) ## Parsed with column specification: ## cols( ## .default = col_double(), ## Team = col_character() ## ) ## See spec(...) for full column specifications. all_teams = bind_rows(\u0026quot;Champion\u0026quot; = champs, \u0026quot;Runner\u0026quot; = runners, .id = \u0026quot;rank\u0026quot;) champs \u0026lt;- champs %\u0026gt;% mutate(Team = ifelse(Team == \u0026quot;Warriorrs\u0026quot;,\u0026quot;Warriors\u0026quot;,Team)) %\u0026gt;% mutate(Team = ifelse(Team == \u0026quot;\u0026#39;Heat\u0026#39;\u0026quot;,\u0026quot;Heat\u0026quot;,Team)) %\u0026gt;% mutate(Win = as.","tags":["R"],"title":"NBA Analysis","type":"project"},{"authors":null,"categories":["data analysis"],"content":"\n\n\n\n","date":1553904000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1553904000,"objectID":"51ff02f3ba7a5a396a0ef4e31751fe8b","permalink":"/project/atus-survey-analysis/","publishdate":"2019-03-30T00:00:00Z","relpermalink":"/project/atus-survey-analysis/","section":"project","summary":"","tags":["R"],"title":"ATUS Survey Analysis","type":"project"},{"authors":null,"categories":null,"content":" In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;\n","date":1536451200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1536451200,"objectID":"6a451186c775f5f0adb3a0416d0cb711","permalink":"/tutorial/example/","publishdate":"2018-09-09T00:00:00Z","relpermalink":"/tutorial/example/","section":"tutorial","summary":"In this tutorial, I\u0026rsquo;ll share my top 10 tips for getting started with Academic:\nTip 1 \u0026hellip;\nTip 2 \u0026hellip;","tags":null,"title":"Example Page","type":"docs"},{"authors":["GA Cushen"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"d77fa4a74076ffcd7ca6c21cfc27a4b2","permalink":"/publication/person-re-id/","publishdate":"2015-09-01T00:00:00Z","relpermalink":"/publication/person-re-id/","section":"publication","summary":"Person re-identification is a critical security task for recognizing a person across spatially disjoint sensors. Previous work can be computationally intensive and is mainly based on low-level cues extracted from RGB data and implemented on a PC for a fixed sensor network (such as traditional CCTV). We present a practical and efficient framework for mobile devices (such as smart phones and robots) where high-level semantic soft biometrics are extracted from RGB and depth data. By combining these cues, our approach attempts to provide robustness to noise, illumination, and minor variations in clothing. This mobile approach may be particularly useful for the identification of persons in areas ill-served by fixed sensors or for tasks where the sensor position and direction need to dynamically adapt to a target. Results on the BIWI dataset are preliminary but encouraging. Further evaluation and demonstration of the system will be available on our website.","tags":[],"title":"A Person Re-Identification System For Mobile Devices","type":"publication"},{"authors":null,"categories":[],"content":" Welcome I’m Jane Doe! I’ve recently completed the Chromebook Data Science Course Set on Leanpub.\nI’m interested in working with data and answering interesting questions\n ","date":1437609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437609600,"objectID":"f3c17aa7eb6b6f0cb687de2fc6e482d6","permalink":"/post/r-markdown/","publishdate":"2015-07-23T00:00:00Z","relpermalink":"/post/r-markdown/","section":"post","summary":" Welcome I’m Jane Doe! I’ve recently completed the Chromebook Data Science Course Set on Leanpub.\nI’m interested in working with data and answering interesting questions\n ","tags":[],"title":"Welcome!","type":"post"},{"authors":null,"categories":[],"content":" Welcome I’m Jane Doe! I’ve recently completed the Chromebook Data Science Course Set on Leanpub.\nI’m interested in working with data and answering interesting questions\n ","date":1437609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1437609600,"objectID":"1024dab139b03a6ce8378c5415a3edc0","permalink":"/post/r-markdown/","publishdate":"2015-07-23T00:00:00Z","relpermalink":"/post/r-markdown/","section":"post","summary":" Welcome I’m Jane Doe! I’ve recently completed the Chromebook Data Science Course Set on Leanpub.\nI’m interested in working with data and answering interesting questions\n ","tags":[],"title":"Welcome!","type":"post"},{"authors":["GA Cushen","MS Nixon"],"categories":null,"content":"More detail can easily be written here using Markdown and $\\rm \\LaTeX$ math code.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"2b4d919e3cf73dfcd0063c88fe01cb00","permalink":"/publication/clothing-search/","publishdate":"2013-07-01T00:00:00Z","relpermalink":"/publication/clothing-search/","section":"publication","summary":"A mobile visual clothing search system is presented whereby a smart phone user can either choose a social networking image or capture a new photo of a person wearing clothing of interest and search for similar clothing in a large cloud-based ecommerce database. The phone's GPS location is used to re-rank results by retail store location, to inform the user of local stores where similar clothing items can be tried on.","tags":[],"title":"Mobile visual clothing search","type":"publication"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"c2915ec5da95791851caafdcba9664af","permalink":"/slides/example-slides/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/slides/example-slides/","section":"slides","summary":"","tags":null,"title":"Slides","type":"slides"}]